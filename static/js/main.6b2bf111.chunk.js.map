{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","app/hooks.ts","App.tsx","index.tsx"],"names":["currentTodoReducer","state","action","type","filterReducer","query","status","todosReducer","rootReducer","combineReducers","currentTodo","filter","todos","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoList","error","className","TodoFilter","useState","selectedStatus","setSelectedStatus","searchedTitle","setSearchedtitle","onSubmit","event","preventDefault","onChange","target","value","placeholder","style","pointerEvents","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","useAppDispatch","useDispatch","App","useSelector","setError","dispatch","onPageLoad","a","useEffect","Root","ReactDOM","render","document","getElementById"],"mappings":"+MAsCeA,EAbY,WAGd,IAFXC,EAEU,uDAFK,KACfC,EACU,uCAMN,OALIA,EAAOC,KAKJF,GCzBEG,EAPO,WACpB,MAAO,CACLC,MAAO,GACPC,OAAQ,QCmBGC,EARM,WAAwD,IAAvDN,EAAsD,uDAAvC,GAAIC,EAAmC,uCAC1E,MAAoB,cAAhBA,EAAOC,MAAwBF,EAC1BA,EAGF,ICbHO,EAAcC,0BAAgB,CAClCC,YAAaV,EACbW,OAAQP,EACRQ,MAAOL,IAIIM,EAAQC,sBACnBN,EACAO,8BACEC,0BAAgBC,O,0DCXPC,EAA4B,SAAC,GAEnC,IADLC,EACI,EADJA,MAEA,OACE,qCACGA,GACC,mBAAGC,UAAU,0BAAb,SACGD,IAIL,uBAAOC,UAAU,+BAAjB,SACE,gCACE,+BACE,mCAEA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAIjB,uCACA,8CC5BCC,EAAuB,WAClC,MAA4CC,mBAAS,OAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAUA,OACE,uBACEN,UAAU,mBACVO,SAAU,SAAAC,GAAK,OAAIA,EAAMC,kBAF3B,UAIE,mBAAGT,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRU,SAjBiB,SAACF,GAC1BJ,EAAkBI,EAAMG,OAAOC,QAiBvBA,MAAOT,EAHT,UAKE,wBAAQS,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGZ,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRjB,KAAK,OACLiB,UAAU,QACVa,YAAY,YACZD,MAAOP,EACPK,SA9BkB,SAACF,GACzBF,EAAiBE,EAAMG,OAAOC,UA+B1B,sBAAMZ,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdK,GACC,sBAAML,UAAU,gBAAgBc,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRhC,KAAK,SACLiB,UAAU,SACVgB,QAAS,kBAAMV,EAAiB,gBCzC9C,SAASW,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IClBMC,EAAoCC,ICOpCC,GDNkDC,ICMlC,WAC3B,MAA0B7B,mBAAS,IAAnC,mBAAOH,EAAP,KAAciC,EAAd,KACMC,EAAWL,IAEXM,EAAU,uCAAG,4BAAAC,EAAA,+EFOSlB,EAAY,UEPrB,OAETS,EAFS,OAIfO,EAAS,CAAElD,KAAM,YAAaS,MAAOkC,IAJtB,gDAMfM,EAAS,uBANM,yDAAH,qDAchB,OAJAI,qBAAU,WACRF,MACC,IAGD,mCACE,qBAAKlC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,MAAf,SAIE,qCACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACED,MAAOA,mBCpCnBsC,EAAO,kBACX,cAAC,IAAD,CAAU5C,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKN6C,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.6b2bf111.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    // Implement all actions here\n    case 'currentTodo/REMOVE':\n    case 'currentTodo/SET':\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","export const actions = { /* put action creators here */};\n\nconst filterReducer = () => {\n  return {\n    query: '',\n    status: 'all',\n  };\n};\n\nexport default filterReducer;\n\n// imported from other fille\n// import { Todo } from '../types/Todo';\n// import { Status } from '../types/Status';\n\n// type Action = {\n//   type: Status\n// };\n\n// enum ActionType {\n//   active = 'active',\n//   completed = 'completed',\n//   all = 'all',\n// }\n\n// const todosReducer = (todos: Todo[], action: Action): Todo[] => {\n//   switch (action.type) {\n//     case ActionType.active:\n//       return todos.filter(todo => todo.completed === false);\n//     case ActionType.completed:\n//       return todos.filter(todo => todo.completed === true);\n//     default:\n//       return todos;\n//   }\n// };\n\n// export todosReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET';\n  payload: Todo[];\n};\n\nexport const setTodos = (todos: Todo[]) => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\n// export const actions = { setTodos };\n\ntype State = Todo[];\n\nconst todosReducer = (state: State = [], action: SetTodosAction): Todo[] => {\n  if (action.type === 'todos/SET' && state) {\n    return state;\n  }\n\n  return [];\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","/* eslint-disable max-len */\nimport React from 'react';\n\ntype Props = {\n  error: string,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  error,\n}) => {\n  return (\n    <>\n      {error && (\n        <p className=\"notification is-warning\">\n          {error}\n        </p>\n      )}\n\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n        {/* <tbody>\n          {visibleTodos.map(({\n            id,\n            title,\n            completed,\n            // userId\n          }) => (\n            <tr key={id} data-cy=\"todo\">\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={\n                    completed\n                      ? 'has-text-success'\n                      : 'has-text-danger'\n                  }\n                >\n                  {title}\n                </p>\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody> */}\n      </table>\n      {/* <table className=\"table is-narrow is-fullwidth\">\n\n        <tbody>\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">1</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">delectus aut autem</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">2</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\" className=\"has-background-info-light\">\n            <td className=\"is-vcentered\">3</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">fugiat veniam minus</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">4</td>\n            <td className=\"is-vcentered\"><span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span></td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">et porro tempora</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">5</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">laboriosam mollitia et enim quasi adipisci quia provident illum</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">6</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">qui ullam ratione quibusdam voluptatem quia omnis</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">7</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">illo expedita consequatur quia in</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">8</td>\n\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">9</td>\n            <td className=\"is-vcentered\"> </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-danger\">molestiae perspiciatis ipsa</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n\n          <tr data-cy=\"todo\">\n            <td className=\"is-vcentered\">10</td>\n\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className=\"has-text-success\">illo est ratione doloremque quia maiores aut</p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table> */}\n    </>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\n\nexport const TodoFilter: React.FC = () => {\n  const [selectedStatus, setSelectedStatus] = useState('all');\n  const [searchedTitle, setSearchedtitle] = useState('');\n\n  const handleStatusChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedStatus(event.target.value);\n  };\n\n  const handleChangeTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setSearchedtitle(event.target.value);\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleStatusChange}\n            value={selectedStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchedTitle}\n          onChange={handleChangeTitle}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchedTitle && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearchedtitle('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { useAppDispatch } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const [error, setError] = useState('');\n  const dispatch = useAppDispatch();\n\n  const onPageLoad = async () => {\n    try {\n      const res = await getTodos();\n\n      dispatch({ type: 'todos/SET', todos: res });\n    } catch {\n      setError('unable to get todos');\n    }\n  };\n\n  useEffect(() => {\n    onPageLoad();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {/* {!todos.length\n              ? <Loader />\n              : ( */}\n            <>\n              <h1 className=\"title\">Todos:</h1>\n\n              <div className=\"block\">\n                <TodoFilter />\n              </div>\n\n              <div className=\"block\">\n                <TodoList\n                  error={error}\n                // todos={todos}\n                />\n              </div>\n            </>\n            {/* )} */}\n          </div>\n        </div>\n      </div>\n      {/* <TodoModal /> */}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}